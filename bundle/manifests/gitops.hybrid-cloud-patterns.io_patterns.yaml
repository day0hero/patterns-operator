apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: patterns.gitops.hybrid-cloud-patterns.io
spec:
  group: gitops.hybrid-cloud-patterns.io
  names:
    kind: Pattern
    listKind: PatternList
    plural: patterns
    shortNames:
    - patt
    singular: pattern
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.lastStep
      name: Step
      priority: 1
      type: string
    - jsonPath: .status.lastError
      name: Error
      priority: 2
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Pattern is the Schema for the patterns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          conditions:
            items:
              description: "Condition contains details for one aspect of the current
                state of this API Resource. --- This struct is intended for direct
                use as an array at the field path .status.conditions.  For example,
                type FooStatus struct{     // Represents the observations of a foo's
                current state.     // Known .status.conditions.type are: \"Available\",
                \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     //
                +patchStrategy=merge     // +listType=map     // +listMapKey=type
                \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                \n     // other fields }"
              properties:
                lastTransitionTime:
                  description: lastTransitionTime is the last time the condition transitioned
                    from one status to another. This should be when the underlying
                    condition changed.  If that is not known, then using the time
                    when the API field changed is acceptable.
                  format: date-time
                  type: string
                message:
                  description: message is a human readable message indicating details
                    about the transition. This may be an empty string.
                  maxLength: 32768
                  type: string
                observedGeneration:
                  description: observedGeneration represents the .metadata.generation
                    that the condition was set based upon. For instance, if .metadata.generation
                    is currently 12, but the .status.conditions[x].observedGeneration
                    is 9, the condition is out of date with respect to the current
                    state of the instance.
                  format: int64
                  minimum: 0
                  type: integer
                reason:
                  description: reason contains a programmatic identifier indicating
                    the reason for the condition's last transition. Producers of specific
                    condition types may define expected values and meanings for this
                    field, and whether the values are considered a guaranteed API.
                    The value should be a CamelCase string. This field may not be
                    empty.
                  maxLength: 1024
                  minLength: 1
                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  type: string
                status:
                  description: status of the condition, one of True, False, Unknown.
                  enum:
                  - "True"
                  - "False"
                  - Unknown
                  type: string
                type:
                  description: type of condition in CamelCase or in foo.example.com/CamelCase.
                    --- Many .condition.type values are consistent across resources
                    like Available, but because arbitrary conditions can be useful
                    (see .node.status.conditions), the ability to deconflict is important.
                    The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                  maxLength: 316
                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                  type: string
              required:
              - lastTransitionTime
              - message
              - reason
              - status
              - type
              type: object
            type: array
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PatternSpec defines the desired state of Pattern
            properties:
              clusterGroupName:
                type: string
              extraParameters:
                description: '.Name is dot separated per the helm --set syntax, such
                  as:   global.something.field'
                items:
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              extraValueFiles:
                description: URLs to additional Helm parameter files
                items:
                  type: string
                type: array
              gitOpsSpec:
                properties:
                  manualApproval:
                    description: 'Require manual confirmation before installing and
                      upgrading operators. Default: False'
                    type: boolean
                  manualSync:
                    description: 'Require manual intervention before Argo will sync
                      new content. Default: False'
                    type: boolean
                  operatorCSV:
                    description: Specific version of openshift-gitops to deploy.  Requires
                      UseCSV=True
                    type: string
                  operatorChannel:
                    description: 'Channel to deploy openshift-gitops from. Default:
                      stable'
                    type: string
                  operatorSource:
                    description: 'Source to deploy openshift-gitops from. Default:
                      redhat-operators'
                    type: string
                  useCSV:
                    description: 'Dangerous. Force a specific version to be installed.
                      Default: False'
                    type: boolean
                type: object
              gitSpec:
                properties:
                  hostname:
                    description: Optional. FQDN of the git server if automatic parsing
                      from TargetRepo is broken
                    type: string
                  originRepo:
                    description: Unused
                    type: string
                  targetRepo:
                    description: Git repo containing the pattern to deploy. Must use
                      https/http
                    type: string
                  targetRevision:
                    description: 'Branch, tag, or commit to deploy.  Does not support
                      short-sha''s. Default: main'
                    type: string
                  valuesDirectoryURL:
                    description: Optional. Alternate URL to obtain Helm values files
                      from instead of this pattern.
                    type: string
                required:
                - targetRepo
                type: object
            required:
            - clusterGroupName
            - gitSpec
            type: object
          status:
            description: PatternStatus defines the observed state of Pattern
            properties:
              clusterDomain:
                type: string
              clusterID:
                type: string
              clusterName:
                type: string
              clusterPlatform:
                type: string
              lastError:
                description: Last error encountered by the pattern
                type: string
              lastStep:
                description: Last action related to the pattern
                type: string
              version:
                description: Number of updates to the pattern
                type: integer
            type: object
        required:
        - conditions
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
